{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\Zakwan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mod_exp-1.0.1","program":"C:\\Users\\Zakwan\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","mod_exp","C:\\Users\\Zakwan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mod_exp-1.0.1\\src\\lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=e087026ec35788e6","-C","extra-filename=-e087026ec35788e6","--out-dir","c:\\Users\\Zakwan\\Documents\\Chaum–Pedersen\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\Zakwan\\Documents\\Chaum–Pedersen\\target\\rls\\debug\\deps","--extern","num=c:\\Users\\Zakwan\\Documents\\Chaum–Pedersen\\target\\rls\\debug\\deps\\libnum-17870d3e272af3b9.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\Zakwan\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\Users\\Zakwan\\Documents\\Chaum–Pedersen\\target\\rls\\debug\\deps\\libmod_exp-e087026ec35788e6.rmeta"},"prelude":{"crate_id":{"name":"mod_exp","disambiguator":[8331118724254232112,0]},"crate_root":"C:\\Users\\Zakwan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mod_exp-1.0.1\\src","external_crates":[{"file_name":"C:\\Users\\Zakwan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mod_exp-1.0.1\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[13015713666403456114,0]}},{"file_name":"C:\\Users\\Zakwan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mod_exp-1.0.1\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[1507510987272037120,0]}},{"file_name":"C:\\Users\\Zakwan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mod_exp-1.0.1\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[3803325750332457499,0]}},{"file_name":"C:\\Users\\Zakwan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mod_exp-1.0.1\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[4223354511651166533,0]}},{"file_name":"C:\\Users\\Zakwan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mod_exp-1.0.1\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[15700094508901508366,0]}},{"file_name":"C:\\Users\\Zakwan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mod_exp-1.0.1\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[12632183332710247155,0]}},{"file_name":"C:\\Users\\Zakwan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mod_exp-1.0.1\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[18262169243471273054,0]}},{"file_name":"C:\\Users\\Zakwan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mod_exp-1.0.1\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[15664785966706829415,0]}},{"file_name":"C:\\Users\\Zakwan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mod_exp-1.0.1\\src\\lib.rs","num":9,"id":{"name":"miniz_oxide","disambiguator":[3895343934390880989,0]}},{"file_name":"C:\\Users\\Zakwan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mod_exp-1.0.1\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[1841993658411810574,0]}},{"file_name":"C:\\Users\\Zakwan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mod_exp-1.0.1\\src\\lib.rs","num":11,"id":{"name":"adler","disambiguator":[1117248029108287081,0]}},{"file_name":"C:\\Users\\Zakwan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mod_exp-1.0.1\\src\\lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[14646112292732085519,0]}},{"file_name":"C:\\Users\\Zakwan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mod_exp-1.0.1\\src\\lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[11979428506951486581,0]}},{"file_name":"C:\\Users\\Zakwan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mod_exp-1.0.1\\src\\lib.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[2104796995944127881,0]}},{"file_name":"C:\\Users\\Zakwan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mod_exp-1.0.1\\src\\lib.rs","num":15,"id":{"name":"panic_unwind","disambiguator":[4084207378877276393,0]}},{"file_name":"C:\\Users\\Zakwan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mod_exp-1.0.1\\src\\lib.rs","num":16,"id":{"name":"num","disambiguator":[12804252190427701521,0]}},{"file_name":"C:\\Users\\Zakwan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mod_exp-1.0.1\\src\\lib.rs","num":17,"id":{"name":"num_complex","disambiguator":[377179058471680141,0]}},{"file_name":"C:\\Users\\Zakwan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mod_exp-1.0.1\\src\\lib.rs","num":18,"id":{"name":"num_traits","disambiguator":[414960613347606594,0]}},{"file_name":"C:\\Users\\Zakwan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mod_exp-1.0.1\\src\\lib.rs","num":19,"id":{"name":"num_integer","disambiguator":[8320479789536828156,0]}},{"file_name":"C:\\Users\\Zakwan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mod_exp-1.0.1\\src\\lib.rs","num":20,"id":{"name":"num_iter","disambiguator":[12597157028702270090,0]}},{"file_name":"C:\\Users\\Zakwan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mod_exp-1.0.1\\src\\lib.rs","num":21,"id":{"name":"num_rational","disambiguator":[773513899697354901,0]}}],"span":{"file_name":"C:\\Users\\Zakwan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mod_exp-1.0.1\\src\\lib.rs","byte_start":0,"byte_end":2318,"line_start":1,"line_end":90,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\Zakwan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mod_exp-1.0.1\\src\\lib.rs","byte_start":0,"byte_end":2318,"line_start":1,"line_end":90,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\Zakwan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mod_exp-1.0.1\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":12},{"krate":0,"index":15},{"krate":0,"index":18},{"krate":0,"index":21}],"decl_id":null,"docs":" Modular Exponentiation","sig":null,"attributes":[{"value":"/ Modular Exponentiation","span":{"file_name":"C:\\Users\\Zakwan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mod_exp-1.0.1\\src\\lib.rs","byte_start":0,"byte_end":26,"line_start":1,"line_end":1,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Zakwan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mod_exp-1.0.1\\src\\lib.rs","byte_start":27,"byte_end":30,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Implementation of a modular exponentiation algorithm based on the algorithm from","span":{"file_name":"C:\\Users\\Zakwan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mod_exp-1.0.1\\src\\lib.rs","byte_start":31,"byte_end":115,"line_start":3,"line_end":3,"column_start":1,"column_end":85}},{"value":"/ 'Applied Cryptography'. You can find more details in that book, or on","span":{"file_name":"C:\\Users\\Zakwan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mod_exp-1.0.1\\src\\lib.rs","byte_start":116,"byte_end":189,"line_start":4,"line_end":4,"column_start":1,"column_end":74}},{"value":"/ [wikipedia](https://en.wikipedia.org/wiki/Modular_exponentiation#Right-to-left_binary_method).","span":{"file_name":"C:\\Users\\Zakwan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mod_exp-1.0.1\\src\\lib.rs","byte_start":190,"byte_end":288,"line_start":5,"line_end":5,"column_start":1,"column_end":99}}]},{"kind":"Function","id":{"krate":0,"index":21},"span":{"file_name":"C:\\Users\\Zakwan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mod_exp-1.0.1\\src\\lib.rs","byte_start":977,"byte_end":984,"line_start":37,"line_end":37,"column_start":8,"column_end":15},"name":"mod_exp","qualname":"::mod_exp","value":"pub fn mod_exp<T>(T, T, T) -> T where T: Num + PartialOrd + Shr<T, Output =\nT> + Copy + Bounded","parent":null,"children":[],"decl_id":null,"docs":" Performs the exponentiation","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\Zakwan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mod_exp-1.0.1\\src\\lib.rs","byte_start":375,"byte_end":399,"line_start":12,"line_end":12,"column_start":1,"column_end":25}},{"value":"/ Performs the exponentiation","span":{"file_name":"C:\\Users\\Zakwan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mod_exp-1.0.1\\src\\lib.rs","byte_start":400,"byte_end":431,"line_start":13,"line_end":13,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Zakwan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mod_exp-1.0.1\\src\\lib.rs","byte_start":432,"byte_end":435,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ All parameters are generic, provided they implement the following traits:","span":{"file_name":"C:\\Users\\Zakwan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mod_exp-1.0.1\\src\\lib.rs","byte_start":436,"byte_end":513,"line_start":15,"line_end":15,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Zakwan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mod_exp-1.0.1\\src\\lib.rs","byte_start":514,"byte_end":517,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ * Num","span":{"file_name":"C:\\Users\\Zakwan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mod_exp-1.0.1\\src\\lib.rs","byte_start":518,"byte_end":527,"line_start":17,"line_end":17,"column_start":1,"column_end":10}},{"value":"/ * PartialOrd","span":{"file_name":"C:\\Users\\Zakwan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mod_exp-1.0.1\\src\\lib.rs","byte_start":528,"byte_end":544,"line_start":18,"line_end":18,"column_start":1,"column_end":17}},{"value":"/ * Shr<T, Output=T>","span":{"file_name":"C:\\Users\\Zakwan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mod_exp-1.0.1\\src\\lib.rs","byte_start":545,"byte_end":567,"line_start":19,"line_end":19,"column_start":1,"column_end":23}},{"value":"/ * Copy","span":{"file_name":"C:\\Users\\Zakwan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mod_exp-1.0.1\\src\\lib.rs","byte_start":568,"byte_end":578,"line_start":20,"line_end":20,"column_start":1,"column_end":11}},{"value":"/ * Bounded","span":{"file_name":"C:\\Users\\Zakwan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mod_exp-1.0.1\\src\\lib.rs","byte_start":579,"byte_end":592,"line_start":21,"line_end":21,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Zakwan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mod_exp-1.0.1\\src\\lib.rs","byte_start":593,"byte_end":596,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ You can find the `Num` and `Bounded` traits in the [num](https://crates.io/crate/num) crate.","span":{"file_name":"C:\\Users\\Zakwan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mod_exp-1.0.1\\src\\lib.rs","byte_start":597,"byte_end":693,"line_start":23,"line_end":23,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"C:\\Users\\Zakwan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mod_exp-1.0.1\\src\\lib.rs","byte_start":694,"byte_end":697,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Zakwan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mod_exp-1.0.1\\src\\lib.rs","byte_start":698,"byte_end":712,"line_start":25,"line_end":25,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Zakwan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mod_exp-1.0.1\\src\\lib.rs","byte_start":713,"byte_end":716,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Zakwan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mod_exp-1.0.1\\src\\lib.rs","byte_start":717,"byte_end":724,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"/ use mod_exp::mod_exp;","span":{"file_name":"C:\\Users\\Zakwan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mod_exp-1.0.1\\src\\lib.rs","byte_start":725,"byte_end":750,"line_start":28,"line_end":28,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Zakwan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mod_exp-1.0.1\\src\\lib.rs","byte_start":751,"byte_end":754,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(mod_exp(5, 3, 13), 8);","span":{"file_name":"C:\\Users\\Zakwan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mod_exp-1.0.1\\src\\lib.rs","byte_start":755,"byte_end":792,"line_start":30,"line_end":30,"column_start":1,"column_end":38}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Zakwan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mod_exp-1.0.1\\src\\lib.rs","byte_start":793,"byte_end":800,"line_start":31,"line_end":31,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Zakwan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mod_exp-1.0.1\\src\\lib.rs","byte_start":801,"byte_end":804,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Zakwan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mod_exp-1.0.1\\src\\lib.rs","byte_start":805,"byte_end":817,"line_start":33,"line_end":33,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Zakwan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mod_exp-1.0.1\\src\\lib.rs","byte_start":818,"byte_end":821,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ The function does an `assert!` to verify that the data type of `base` is","span":{"file_name":"C:\\Users\\Zakwan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mod_exp-1.0.1\\src\\lib.rs","byte_start":822,"byte_end":898,"line_start":35,"line_end":35,"column_start":1,"column_end":77}},{"value":"/ large enough that the result won't overflow during the computation","span":{"file_name":"C:\\Users\\Zakwan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mod_exp-1.0.1\\src\\lib.rs","byte_start":899,"byte_end":969,"line_start":36,"line_end":36,"column_start":1,"column_end":71}}]}],"impls":[],"refs":[],"macro_refs":[],"relations":[]}